import os
from typing import (Any, Optional, Tuple, Mapping, List)
from dat_core.connectors.sources.base import SourceBase
from dat_core.connectors.sources.stream import Stream
from verified_sources.<module_name>.specs import <actor_name>Specification
from verified_sources.<module_name>.catalog import <actor_name>Catalog
from verified_sources.<module_name>.streams import <module_name>Stream0


class <actor_name>(SourceBase):
    _spec_class = <actor_name>Specification
    _catalog_class = <actor_name>Catalog

    def check_connection(self, config: <actor_name>Specification) -> Tuple[bool, Optional[Any]]:
        # Implement your connection check logic here
        return False, {}

    def streams(self, config: Mapping[str, Any], json_schemas: Mapping[str, Mapping[str, Any]]=None) -> List[Stream]:
        return [
            <module_name>Stream0(config),
        ]